---
- name: "{{ container_config_name }} :: Imagestream and buildconfig do not exist. Creating..."
  shell: "{{ oc_bin }} new-app {{ template_name_files[template_name] }} {{ params | join(' ') }} | sed '1,/--> Creating resources .../d;/--> Success/,$d' | grep created | sed 's/\\\"//g' | awk '{print $1\"/\"$2}'"
  register: app_build_status
  args:
    chdir: "{{ project_dir }}/config"
  when: (image_stream_name_checks[template_name] == "" and build_config_name_checks[template_name] == "" and build_results[template_name]|bool == false)

- name: "Save the created resource names"
  set_fact:
    created_resources: "{{ created_resources|default({}) | combine( {template_name: app_build_status.stdout_lines} ) }}"
  when: (build_results[template_name]|bool == false and app_build_status.stdout_lines is defined)

- name: "Publish created resource names"
  debug:
    msg: "{{ app_build_status.stdout_lines }}"
  when: (build_results[template_name]|bool == false and app_build_status.stdout_lines is defined)

# Wait container in the pipeline to start building
- name: "{{ container_config_name }} :: Wait for {{  build_config_name_files[template_name] }} to be queued"
  shell: "{{ oc_bin }} get builds | grep '{{  build_config_name_files[template_name] }}'"
  register: oc_build_result
  until: oc_build_result.stdout.find(" Running ") != -1 or oc_build_result.stdout.find(" Failed ") != -1
  retries: 6
  delay: 10
  ignore_errors: yes
  when: build_results[template_name]|bool == false

