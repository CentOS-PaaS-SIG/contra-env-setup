---
# tasks file for os_temps

# Set run time to be used for logging
- set_fact:
    run_time: "{{ ansible_date_time.iso8601_basic_short }}"

# Create directory for this run
- name: "Create log directory"
  file: path="/tmp/contra-env-setup/logs/run-{{ run_time }}" state=directory

# Get ip of the cluster unless it was provided
- name: "Get the cluster Server URL for project {{ openshift_project }}"
  shell: "{{ oc_bin }} status | grep 'https' | awk '{print $NF}' | head -1"
  register: cluster_ip_register
  when: openshift_cluster_ip == ""

- set_fact:
    cluster_ip: "{{ openshift_cluster_ip }}"
  when: openshift_cluster_ip != ""

- set_fact:
    cluster_ip: "{{ cluster_ip_register.stdout }}"
  when: openshift_cluster_ip == ""

- name: "Get setup_crc status"
  debug:
    var: setup_crc

# Add RH IT Cert to cluster
# Remove this task as a part of CVP-2930
- import_tasks: add_rh_cert.yml
  when: setup_crc|bool == true

# Login to the cluster for the profile in use
- import_tasks: login_to_cluster.yml

# Create project
- name: "Create project {{ openshift_project }}"
  import_tasks: get_set_project.yml

# Check if jq is already installed so we can skip installation
- name: "Check if jq is already installed"
  command: jq --version
  register: jq_installed
  ignore_errors: yes

# Install jq for querying container config files
- name: "Install jq for querying container config files"
  package:
    name: jq
  when: host_os == "linux" and jq_installed.rc > 0
  become: true

- set_fact:
    os_template_path: "{{ project_dir }}/{{ os_template_dir }}"
  when:
    - setup_containers|bool == true

# Setup project_repo containers
- include_tasks: "setup_containers.yml"
  when:
    - setup_containers|bool == true

- set_fact:
    os_template_path: "{{ helper_project_dir }}/{{ helper_os_template_dir }}"
  when:
    - setup_containers|bool == true
    - project_repo != helper_project_repo
    - setup_helper_containers|bool == true

# Setup helper containers
- include_tasks: "setup_containers.yml"
  when:
    - setup_containers|bool == true
    - project_repo != helper_project_repo
    - setup_helper_containers|bool == true

# Check if Jenkins is running
- name: "Check to see if a Jenkins Master instance is running"
  shell: "{{ oc_bin }} get pods | grep -i 'running' | grep -i 'jenkins' | tail -1 |  awk '{print $1}'"
  register: jenkins_running
  ignore_errors: yes

- set_fact:
    os_template_path: "{{ helper_project_dir }}/{{ helper_os_template_dir }}/jenkins"
  when:
    - setup_containers|bool == true
    - project_repo != helper_project_repo
    - setup_helper_containers|bool == true
    - jenkins_running.stdout == ""

# Setup helper_project_repo Jenkins master/slave helper containers
- include_tasks: setup_containers.yml
  when:
    - setup_containers|bool == true
    - project_repo != helper_project_repo
    - setup_helper_containers|bool == true
    - jenkins_running.stdout == ""

- set_fact:
    os_template_path: "{{ sample_project_dir }}/{{ sample_os_template_dir }}"
  when:
    - setup_containers|bool == true
    - project_repo != sample_project_repo
    - setup_sample_project|bool == true

# Setup sample_project_repo sample containers
- include_tasks: setup_containers.yml
  when:
    - setup_containers|bool == true
    - project_repo != sample_project_repo
    - setup_sample_project|bool == true

# Add security context constraints
- import_tasks: add_scc.yml
  when: modify_scc|bool == true
