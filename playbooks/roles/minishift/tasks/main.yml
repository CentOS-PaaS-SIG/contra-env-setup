---
# setup minishift

# Determine if minishift binary exists
- name: "Is minishift binary present in {{ minishift_dest_dir }}"
  stat:
    path: "{{ minishift_dest_dir }}/minishift"
  register: minishift_bin

# install minishift
- import_tasks: install_minishift_bin.yml
  when: (minishift_bin.stat.exists == false or install_minishift|bool == true)

# set disk size and memory
- name: "Set minishift disk-size {{ disk_size }}"
  shell: "{{ minishift_dest_dir }}/minishift config set disk-size {{ disk_size }}"

- name: "Set minishift disk-size {{ memory }}"
  shell: "{{ minishift_dest_dir }}/minishift config set memory {{ memory }}"

# set base device size
- name: "Set minishift base device size to {{basedevice_size}}"
  shell: "{{ minishift_dest_dir }}/minishift config set docker-opt 'storage-opt=dm.basesize={{ basedevice_size }}'"

- name: Pull down the minishift iso
  get_url:
    url: "{{ minishift_iso }}"
    dest: "{{ minishift_dest_dir }}/minishift.iso"
    timeout: 120

# check if the minishift profile exists
- name: "Check if the minishift profile exists"
  shell: "{{ minishift_dest_dir }}/minishift status --profile {{ profile }} | head -2 | tail -1 | awk '{print $2}'"
  register: minishift_exist
  ignore_errors: yes

# initialize minishift
- import_tasks: init_minishift.yml
  when: (minishift_exist.stdout == "{{ profile }}" and stop_minishift|bool == false and start_minishift|bool == false)

# stop minishift
- import_tasks: start_mcluster.yml
  when: (start_minishift|bool == true or stop_minishift|bool == true)
