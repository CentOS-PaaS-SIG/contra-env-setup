---
# Install minishift

- name: Query for minishift compressed binary
  uri:
    url: "https://api.github.com/repos/minishift/minishift/releases/tags/{{minishift_version}}"
    return_content: yes
    body_format: json
  register: release

- name: filter for the particular release
  set_fact:
      linux_release: "{{ release.json.assets | selectattr('name', 'search', 'linux-amd64.tgz$') | map(attribute='browser_download_url') | list }}" 

- name: "Pull down and extract minishift binary to {{ ansible_env.HOME }}"
  unarchive:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}"
    remote_src: yes
    list_files: yes
  with_items: "{{linux_release}}"
  when: minishift_bin.stat.exists == false or force_minishift_install|bool == true
  register: archive_contents

- name: minishift source dir
  set_fact:
      minishift_src_dir: "{{ archive_contents.results[0].files[0] }}"

- name: "Create a new {{ minishift_dest_dir }} if it doesn't exist"
  file:
    path: "{{ minishift_dest_dir }}"
    state: directory
  when: (minishift_bin.stat.exists == false or force_minishift_install|bool == true)

- name: "Copy minishift version files to {{ ansible_env.HOME }}/minishift/"
  shell: cp {{ ansible_env.HOME }}/{{ minishift_src_dir }}/* {{ minishift_dest_dir }}/
  when: (minishift_bin.stat.exists == false or force_minishift_install|bool == true)

- name: "Delete {{ ansible_env.HOME }}/{{ minishift_src_dir }}"
  file:
    path: "{{ ansible_env.HOME }}/{{ minishift_src_dir }}"
    state: absent
  when: (minishift_bin.stat.exists == false or force_minishift_install|bool == true)

- include: set_minishift_path.yml

