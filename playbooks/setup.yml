---
- hosts: '{{ hosts | default("all") }}'
  become: '{{ become | default("no") }}'
  become_user: '{{ become_user | default("root") }}'
  remote_user: '{{ user | default("root") }}'
  gather_facts: '{{ gather_facts | default("yes") }}'
  pre_tasks:
    - import_tasks: 'roles/prereqs/tasks/check_os.yml'
    - name: "Register current git http.sslVerify value if exists"
      shell: "git config --list --global | grep http.sslverify | cut -d'=' -f2"
      register: git_ssl_verify
      ignore_errors: yes
  roles:
    - { role: cleanup, when: run_cleanup|bool == true }
    - { role: playbook_pre_tasks, when: "run_pre_tasks|bool == true and run_cleanup|bool == false" }
    - role: create
    - { role: prereqs, when: "run_prereqs|bool == true and setup_minishift|bool == true" }
    - { role: minishift, when: "setup_minishift|bool == true" }
    - { role: k8s_objects }
    - { role: pipeline, when: setup_pipelines|bool == true }
    - { role: playbook_hooks, when: setup_playbook_hooks|bool == true }
  post_tasks:
    - name: "Set git http.sslVerify back to {{ git_ssl_verify.stdout }}"
      shell: "git config --global http.sslVerify {{ git_ssl_verify.stdout }}"
      when:
        - git_ssl_verify.stdout is defined
        - git_ssl_verify.stdout != ""
