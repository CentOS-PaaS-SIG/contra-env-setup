---
# run roles based on certain params
run_cleanup: false
run_prereqs: true
setup_minishift: true
start_minishift: false
setup_containers: true
setup_helper_containers: true
setup_pipelines: false
setup_sample_project: false
setup_playbook_hooks: false
force_minishift_install: false
force_repo_clone: true

# Default location to store contra-env-setup
contra_env_setup_dir: "{{ ansible_env.HOME }}/.contra-env-setup"

# Docker KVM version
dkvm_version: v0.10.0

## minishift values
# minishift version
minishift_version: v1.17.0

# default location for minishift
minishift_dest_dir: "{{ contra_env_setup_dir }}/minishift"

minishift_bin: "{{ minishift_dest_dir }}/minishift"

# default minishift profile name
profile: minishift

# disk, memory size and cpus
disk_size: 40gb
memory: 8092mb
cpus: 2

# minishift iso location
minishift_iso: http://artifacts.ci.centos.org/fedora-atomic/minishift/iso/minishift.iso

# Additional insecure docker registries used inside minishift
# Use comma separated values for more registries
minishift_insecure_registry: ""

# Update this to be the cluster IP of Openshift console
# Leave empty when using minishift
openshift_cluster_ip: ""

# cluster username
username: developer

# cluster password
password: developer

# cluster admin username
admin_username: system

# cluster admin password
admin_password: admin

# project name and display name for openshift
openshift_project: contra-sample-project
openshift_project_display_name: "Contra Sample Project"

# modify tags on images
modify_tags: true

# tag to use
tag: stable

# modify security context contraints (SCC) to run privileged containers
modify_scc: true

## oc cli vars
# oc version
oc_version: v3.9.0

# Path to oc binary directory
oc_bin_path: "{{ ansible_env.HOME }}/.{{ profile }}/cache/oc/{{ oc_version }}/linux"

# Path to oc binary
oc_bin: "{{ oc_bin_path }}/oc"

## Project repo setup

# Project repo
project_repo: https://github.com/CentOS-PaaS-SIG/contra-env-sample-project

# Project repo refspec
project_refspec: '+refs/pull/*:refs/heads/*'

# Project repo branch or sha
project_branch: 'master'

# Project directory
project_dir: "{{ contra_env_setup_dir }}/{{ project_repo.split('/')[-1] | replace('.git', '') }}"

# OpenSift template directory
os_template_dir: "config/s2i"

# Jenkins pipelines directory
pipeline_dir: "config/pipelines/buildconfigs"

# These are parameters that are passed to setup the containers from the project_repo
PARAMS:
  - key: REPO_URL
    val: "{{ project_repo }}"
  - key: REPO_REF
    val: "{{ project_branch }}"

# These are parameters that are passed to setup the helper containers in sample_project_repo
SAMPLE_HELPER_PARAMS:
  - key: REPO_URL
    val: "{{ sample_project_repo }}"
  - key: REPO_REF
    val: "{{ sample_project_branch }}"

# These are parameters that are passed to setup the Jenkins master/slave containers in sample_project_repo
SAMPLE_JENKINS_PARAMS: "{{ SAMPLE_HELPER_CONTAINERS }}"

# These are parameters that are passed to setup the containers from the sample_project_repo
SAMPLE_PARAMS:
  - key: REPO_URL
    val: "{{ sample_project_repo }}"
  - key: REPO_REF
    val: "{{ sample_project_branch }}"
  - key: ENABLE_VM
    val: false
  - key: VM_IMG_URL
    val: http://artifacts.ci.centos.org/artifacts/fedora-atomic/f26/images/latest-atomic.qcow2

params: []

## Sample containers and pipelines

# Sample project repo
sample_project_repo: https://github.com/CentOS-PaaS-SIG/contra-env-sample-project

# Sample Project repo refspec
sample_project_refspec: '+refs/pull/*:refs/heads/*'

# Sample project repo branch or sha
sample_project_branch: 'master'

# Sample project directory
sample_project_dir: "{{ contra_env_setup_dir }}/{{ sample_project_repo.split('/')[-1] | replace('.git', '') }}"

# Sample OpenSift template directory
sample_os_template_dir: "config/s2i"

# Sample Jenkins pipelines directory
sample_pipeline_dir: "config/pipelines/buildconfigs"

## Continuous-Infra helper containers

# Helper project directory
helper_project_dir: "{{ contra_env_setup_dir }}/{{ sample_project_repo.split('/')[-1] | replace('.git', '') }}"

# Helper OpenSift template directory
helper_os_template_dir: "{{ sample_os_template_dir }}"
