---
# run roles based on certain params
run_cleanup: false
run_prereqs: false
setup_nested_virt: false
setup_crc: true
setup_minishift: false # delete in cvp-2930
setup_containers: true
setup_helper_containers: true
setup_pipelines: false
setup_sample_project: false
setup_playbook_hooks: false
run_pre_tasks: false
force_minishift_install: false
force_repo_clone: false

# Overwrite templates and their objects if they already exist
force_template_overwrite: false

# Default location to store contra-env-setup
contra_env_setup_dir: "{{ ansible_env.HOME }}/.contra-env-setup"

# Docker KVM version
dkvm_version: v0.10.0

## minishift values
# minishift version
minishift_version: v1.34.1

# shell configutation file
shell_rc: .bashrc

# default location for minishift
minishift_dest_dir: "{{ contra_env_setup_dir }}/minishift"

minishift_bin: "{{ minishift_dest_dir }}/minishift"

# default minishift profile name
profile: minishift

# disk, memory size and cpus
disk_size: 40gb
memory: 8092mb
cpus: 4

# minishift iso location
minishift_iso: https://github.com/minishift/minishift-centos-iso/releases/download/v1.14.0/minishift-centos7.iso

# Additional insecure docker registries used inside minishift
# Use comma separated values for more registries
minishift_insecure_registry: ""

# Value of minishift configutation option registry-mirror
minishift_registry_mirror: ""

# Update this to be the cluster IP of Openshift console
# Leave empty when using minishift
openshift_cluster_ip: ""

# Optionally set this to be the IP of an existing prepared VM, either local or remote
# See https://docs.okd.io/latest/minishift/using/run-against-an-existing-machine.html
# Leave empty when using minishift locally
minishift_external_vm_ip: ""

# Optionally set this to the external VM user with sudo privileges
minishift_external_vm_user: ""

# Optionally set this to the location of the ssh key for the external VM
minishift_external_vm_ssh_key_location: ""

# Set this to true to skip the log-in step and assume it had already been done
# manually. This is useful to avoid having to store credentials in the
# configuration files or specifying them on the command line
skip_login: False

# cluster security token - if set to '__undefined__' the username and password
# will be used for logging in instead
security_token: __undefined__

# cluster username
username: developer

# cluster password
password: developer

# cluster admin username
admin_username: system

# cluster admin password
admin_password: admin

# project name and display name for openshift
openshift_project: contra-env-infra
openshift_project_display_name: "Contra Infra Project"

# names of instances
instance_names: ["{{ openshift_project }}"]

# modify tags on images
modify_tags: true

# tag to use
tag: stable

# modify security context contraints (SCC) to run privileged containers
modify_scc: false

## oc cli vars
# oc version
oc_version: v3.11.0

# Path to oc binary directory
oc_bin_path: "{{ ansible_env.HOME }}/.crc/bin/oc"

# Path to oc binary
oc_bin: "{{ oc_bin_path }}/oc"

## Project repo setup

# Project repo
project_repo: https://github.com/CentOS-PaaS-SIG/contra-env-infra

# Project repo refspec
project_refspec: '+refs/pull/*:refs/heads/*'

# Project repo branch or sha
project_branch: 'master'

# Project directory
project_dir: "{{ contra_env_setup_dir }}/{{ project_repo.split('/')[-1] | replace('.git', '') }}"

# OpenShift template directory
os_template_dir: "./"

# OpenShift template whitelist, not used if empty
os_template_whitelist: []

# OpenShift template blacklist, not used if whitelist is set
os_template_blacklist:
  - influxdb
  - grafana

# Jenkins pipelines directory
pipeline_dir: "config/pipelines/buildconfigs"

## Sample containers and pipelines

# Sample project repo
sample_project_repo: https://github.com/CentOS-PaaS-SIG/contra-env-sample-project

# Sample Project repo refspec
sample_project_refspec: '+refs/pull/*:refs/heads/*'

# Sample project repo branch or sha
sample_project_branch: 'master'

# Sample project directory
sample_project_dir: "{{ contra_env_setup_dir }}/{{ sample_project_repo.split('/')[-1] | replace('.git', '') }}"

# Sample OpenSift template directory
sample_os_template_dir: "config/s2i/samples"

# Sample Jenkins pipelines directory
sample_pipeline_dir: "config/pipelines/buildconfigs"

## Continuous-Infra helper containers

# Helper project repo
helper_project_repo: https://github.com/CentOS-PaaS-SIG/contra-env-infra

# Helper Project repo refspec
helper_project_refspec: '+refs/pull/*:refs/heads/*'

# Helper project repo branch or sha
helper_project_branch: 'master'

# Helper project directory
helper_project_dir: "{{ contra_env_setup_dir }}/{{ helper_project_repo.split('/')[-1] | replace('.git', '') }}"

# Helper OpenSift template directory
helper_os_template_dir: "./"

# variables to configure sending pipeline metrics to influxdb
influxdb_admin_user: "admin"
influxdb_admin_password: "admin"

# the internal openshift dns
influxdb_api_route: "influxdb.{{ openshift_project }}.svc.cluster.local:8086"

# the root user for grafana
grafana_admin_user: "admin"
grafana_admin_password: "admin"

# this will configure the Jenkins Influxdb plugin
jenkins_enable_metrics: false

# the job dsl repo. This will read all dsl files from src/jobs/*.groovy
jenkins_dsl_job_repo: "CentOS-PaaS-SIG/contra-env-sample-project"
jenkins_dsl_repo_branch: "master"
